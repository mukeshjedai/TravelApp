<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MCQ Quiz</title>
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

</head>
<body>
<div  style="visibility:visible; color: white; background-color:#164549">
    <span>Australian Citizenship Practice Test</span>
</div>
<div style="position: fixed; top: 40px; right: 140px; background-color: #164549; padding: 5px 10px; color: white; border-radius: 4px;">
    <span>Correct: </span>
    <span id="correctCounter">0</span>
    &nbsp;&nbsp;&nbsp;
    <span>Wrong: </span>
    <span id="wrongCounter">0</span>
   
</div>
<div style="position: fixed; top: 80px; left: 0px; background-color: #ffffff; color: #000000; padding: 5px 10px; border-radius: 4px;">
    <span id = "indexCounter">Question 1 of 496 questions</span>

</div>

<div style="position: fixed; bottom: 20px; right: 20px; background-color: #164549; padding: 5px 10px; color: white; border-radius: 4px;">
    <div class="g-signin2" style="float: right; margin-left: 90%;" data-onsuccess="onSignIn"></div>
   
</div>



<div class="g_id_signin"
     data-type="standard"
     data-size="large"
     data-theme="outline"
     data-text="sign_in_with"
     data-shape="rectangular"
     data-logo_alignment="left"
     data-onsuccess="onSignIn">

</div>
<div id="buttonDiv" style="float:right; visibility: hidden"></div>
<a href="#"  onclick="signOut();" style="float:right; visibility: hidden">Sign out</a>

<div id="questionContainer" class="question-container">
    <table id="example" class="display" style="width:100%;; margin-top: 20%">
        <tbody>

        </tbody>
    </table>
</div>

</body>


<script>
    document.addEventListener("DOMContentLoaded", function () {
       
    var correctCount = 0;
    var wrongCount = 0;
        var currentQuestionIndex = 0;
        var data; // Store the fetched data globally

        // Function to load a question
        function loadQuestion(index) {
            var tbody = document.getElementById("example").getElementsByTagName("tbody")[0];
            tbody.innerHTML = ""; // Clear previous question

            if (index < data.length) {
                var questionData = data[index];

                var questionRow = tbody.insertRow();
                var questionHeader = questionRow.insertCell();
                questionHeader.textContent = questionData.question;
                questionHeader.style.fontWeight = "900"; // Set the font to bold
                questionHeader.setAttribute("class", "text-primary-emphasis"); // Set the variant attribute
                


                var hiddenAnswerCell = questionRow.insertCell();
                hiddenAnswerCell.textContent = questionData.answer;
                hiddenAnswerCell.style.display = "none";
                hiddenAnswerCell.id = "correctAnswer";  // Added ID for easy reference


                // Create a new row for each option
                for (var i = 1; i <= 4; i++) {
                    var optionRow = tbody.insertRow();
                    var optionCell = optionRow.insertCell();
                    var label = document.createElement("label");
                    label.style.fontWeight = "600"; // Set the font to bold
                    label.setAttribute("class","form-check-label");
                    var radio = document.createElement("input");
                    radio.setAttribute("class","form-check-input");
                    radio.style.fontWeight = "600"; // Set the font to bold


                    radio.type = "radio";
                    radio.name = "option";
                    radio.value = i;
                    label.appendChild(radio);
                    label.appendChild(document.createTextNode(questionData["option" + i]));
                    optionCell.appendChild(label);
                    
                    // Add event listener to radio button (same as before)
                    optionRow.addEventListener("change", handleOptionChange);
                }
            }
        }

        // Function to handle radio button clicks (feedback, updating counters)
        function handleOptionChange() {
            var row = this.closest("tr");
            var selectedOptionValue = this.value;
            var questionRow = row.previousElementSibling;

            // Finding the correct answer (more robust)
            var correctAnswerCell = document.getElementById("correctAnswer");
            var correctAnswer = correctAnswerCell.textContent;

            if (!correctAnswer) {
                console.error("Correct answer not found for this question.");
                return; // Exit early if answer is missing
            }

            const radioButtons = document.querySelectorAll('input[type="radio"]');
            var selectedIndex = -1;
            radioButtons.forEach(radio => {

                radioButtons.forEach((otherRadio,index) => {

                        if (otherRadio.checked)
                        {
                            selectedIndex = otherRadio.value;
                            if (selectedIndex === correctAnswer){
                                otherRadio.closest('tr').style.background = '#6CF327';
                            }else{
                                otherRadio.closest('tr').style.background = '#FAD2D2';
                            }
                        }
                    if ((index+1).toString().indexOf(correctAnswer)===0){
                        
                        otherRadio.closest('tr').style.background = '#6CF327';
                    }
                        otherRadio.disabled = true;
                });
            });
            
            if (selectedIndex === correctAnswer){
                
                correctCount ++;
            }else{
                wrongCount++;
            }




            // Update counters
            //selectedOptionValue === correctAnswer ? correctCount++ : wrongCount++;
            document.getElementById("correctCounter").textContent = correctCount;
            document.getElementById("wrongCounter").textContent = wrongCount;
        }

        // Fetch questions from the API
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                data = JSON.parse(this.responseText);
                loadQuestion(currentQuestionIndex); // Load the first question initially
            }
        };
        xhttp.open("GET", "/api/Topics", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send();

        // Add "Next" button and its functionality
        var nextButton = document.createElement("button");
        nextButton.textContent = "Next    ";
        nextButton.setAttribute("class", "btn btn-primary"); // Set the variant attribute
        nextButton.style.marginTop = "3%";
        nextButton.style.marginLeft = "4%";
       
        var indexCounter = document.getElementById("indexCounter");
        nextButton.addEventListener("click", function () {
            indexCounter.textContent=("Question "+(currentQuestionIndex+2)+" of 496");
            currentQuestionIndex++;
            loadQuestion(currentQuestionIndex);
        });
        document.body.appendChild(nextButton); // Add button to the page

      

    });
</script>

<style>
    
</style>

</html>
